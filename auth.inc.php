<?php

//PARAMETER YOU SHOULD CHANGE
//THE WP ENDPOINT
define('WP_XAUTH_ENDPOINT', "EDIT ME");

//maybe useful at some point if you want PHP SESSION to last a certain amount of time
//define('WP_XAUTH_SESSION_TTL', 3600 * 24);

//AN ENUM (pre-PHP8) FOR THE MODE OF OPERATION : when should we query the WP server for its public signing key ?
//Getting everytime the public key slows down the authentification
class PEM_query
{
    const ifneeded = 0; //default, query if the file is not found locally
    const always = 1;
    const never = 2;
};
$PEMQ = new PEM_query;
$QUERY_FOR_PEM = $PEMQ::ifneeded;

$LOGIN_TIMEOUT = 60; //in seconds
$TOKLEN = 32;  //in Bytes, must be even 32B = 256b
$PUBPEM_FILE = "./_gen_PUBPEM.php";


session_start();

if (!isset($_SESSION['wp_xauth_valid'])) {
    //ONLY IF NOT AUTHED  (it is not pretty to have a large "if", 
    //the alternative is to wrap in a function and use return, which is not better

    //MUST BE HTTPS !!!! (otherwise it defeats the whole security purpose)
    if ($_SERVER["HTTPS"] != "on") {
        header("Location: https://" . $_SERVER["HTTP_HOST"] . $_SERVER["REQUEST_URI"]);
        die();
    }

    //utility functions to transmit strings over GET params
    function urlb64_enc($data)
    {
        return rtrim(strtr(base64_encode($data), '+/', '-_'), '=');
    }
    function urlb64_dec($data)
    {
        return base64_decode(str_pad(strtr($data, '-_', '+/'), strlen($data) % 4, '=', STR_PAD_RIGHT));
    }

    // NOT AUTH & NO RESPONSE IN THE PARAMETERS = send token to get signed JSON token with its signature
    // The signature can only be generated by a user authentcated on the WP server
    if (!(isset($_GET['j']) && isset($_GET['s']))) {
        $SELF = "https://" . $_SERVER['HTTP_HOST'] . $_SERVER["SCRIPT_NAME"];
        $tok = bin2hex(random_bytes(ceil($TOKLEN / 2)));
        setcookie('wp_xauth_tok', $tok,  time() + $LOGIN_TIMEOUT, '/'); //allow $TIMEOUT sec max for the auth
        header('Location: ' . WP_XAUTH_ENDPOINT . '?r=' . urlb64_enc($SELF) . "&t=" . $tok);
        die();
    }
    if (!isset($_COOKIE['wp_xauth_tok'])) {
        die("<h3>MISSING TOKEN COOKIE</h3> You have $LOGIN_TIMEOUT seconds to complete the login. If you have been too slow try again");
    }

    // RECEIVED THE DATA TO VERIFY :
    //Verify the token is right
    $json_auth = urlb64_dec($_GET['j']);
    $auth_data = json_decode($json_auth);

    if ($_COOKIE['wp_xauth_tok'] !== $auth_data->request) {
        http_response_code(401);
        die('BAD REQUEST TOKEN');
    }

    //GET the public PEM (locally or through the network)
    if (!file_exists($PUBPEM_FILE) && $QUERY_FOR_PEM == $PEMQ::never) {
        die("NO LOCAL PUBLIC PEM");
    }

    if (
        $QUERY_FOR_PEM == $PEMQ::never
        || (!file_exists($PUBPEM_FILE) && $QUERY_FOR_PEM == $PEMQ::ifneeded)
    ) {
        $curl_h = curl_init(WP_XAUTH_ENDPOINT);
        curl_setopt($curl_h, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($curl_h, CURLOPT_FOLLOWLOCATION, true);
        curl_setopt($curl_h, CURLOPT_PROTOCOLS, CURLPROTO_HTTPS);
        $PUBLICPEM = curl_exec($curl_h);
        if ($QUERY_FOR_PEM === $PEMQ::ifneeded) {
            $PUBPEM_fp = fopen($PUBPEM_FILE, "w") or die("Unable to open key file!");
            fwrite($PUBPEM_fp, "<?php \$PUBLICPEM='$PUBLICPEM'; ?>") or die("ERROR no file generated");
            fclose($PUBPEM_fp);
        }
    }

    if ($QUERY_FOR_PEM == $PEMQ::never || $QUERY_FOR_PEM == $PEMQ::ifneeded) {
        include($PUBPEM_FILE);
    }

    //verify signature
    $verif = openssl_verify($json_auth, urlb64_dec($_GET['s']), $PUBLICPEM, "sha256WithRSAEncryption");
    if ($verif === 1) {
        $_SESSION['wp_xauth_valid'] = $_COOKIE['wp_xauth_tok'];
        $_SESSION['wp_xauth_user_id'] = $auth_data->user->id;
        $_SESSION['wp_xauth_user_email'] = $auth_data->user->email;
    } elseif ($verif === 0) {
        http_response_code(401);
        die('BAD SIGNATURE');
    } else {
        http_response_code(500);
        die('SERVER ERROR');
    }
}
//IF THE PROCESS DID NOT DIE YET AT THIS POINT, WE HAVE A SESSION SET UP ! 
//Congratulations you are authentified